/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package danhba;

import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class frmHome extends javax.swing.JFrame implements ListSelectionListener {

    PhoneBook phoneBook = null;
    DefaultTableModel tblModel;
    ListSelectionModel listSelectModel;
    Phone phoneSelect;

    /**
     * Creates new form frmHome
     */
    public frmHome() {
        initComponents();
        this.setLocationRelativeTo(null);
        Image icon = new ImageIcon(this.getClass().getResource("users.png")).getImage();
        this.setIconImage(icon);
        phoneBook = new PhoneBook();
        tblPhoneBook.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblModel = (DefaultTableModel) tblPhoneBook.getModel();
        showPhoneBook(phoneBook.getListPhone());
        listSelectModel = tblPhoneBook.getSelectionModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhoneBook = new javax.swing.JTable();
        txtFind = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(java.awt.Color.blue);
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ DANH BẠ");

        jLabel2.setText("Họ và tên");

        txtName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel3.setText("Số điện thoại");

        txtPhoneNumber.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jLabel4.setText("Email");

        txtEmail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/danhba/user-add.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/danhba/edit.png"))); // NOI18N
        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/danhba/search.png"))); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/danhba/trash.png"))); // NOI18N
        btnDelete.setText("Xoá");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tblPhoneBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Họ và tên", "Số điện thoại", "Email"
            }
        ));
        tblPhoneBook.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblPhoneBookFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tblPhoneBookFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(tblPhoneBook);
        if (tblPhoneBook.getColumnModel().getColumnCount() > 0) {
            tblPhoneBook.getColumnModel().getColumn(0).setMaxWidth(35);
        }

        txtFind.setEnabled(false);
        txtFind.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFindKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(7, 7, 7)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete)
                                .addGap(101, 101, 101))
                            .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPhoneNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(txtFind)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch)))
                .addGap(14, 14, 14))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnDelete, btnEdit, btnSearch});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtEmail, txtName, txtPhoneNumber});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (checkInupt()) {
            if (phoneBook.phoneNumberIsExist(txtPhoneNumber.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Số điện thoại đã tồn tại", "Chú ý", JOptionPane.WARNING_MESSAGE);
            } else {
                int i = phoneBook.getListPhone().size();
                String STT = (i < 9) ? ("0" + (i + 1)) : ((i + 1) + "");
                tblModel.addRow(new Object[]{
                    STT, txtName.getText(), txtPhoneNumber.getText(), txtEmail.getText()
                });
                Phone phone = new Phone(txtName.getText(), txtPhoneNumber.getText(), txtEmail.getText());
                phoneBook.addPhone(phone);
                JOptionPane.showMessageDialog(rootPane, "Thêm thành công \n" + phone.toString());
            }
        }
//        saveData();
    }//GEN-LAST:event_btnAddActionPerformed

    private boolean checkInupt() {
        if (txtName.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Tên không được để trống", "Chú ý", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (txtPhoneNumber.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Số điện thoại không được để trống", "Chú ý", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (!Phone.phoneNumberRegex(txtPhoneNumber.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Số điện thoại không đúng", "Chú ý", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (txtEmail.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Email được để trống", "Chú ý", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (!Phone.emailRegex(txtEmail.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Email không đúng định dạng", "Chú ý", JOptionPane.WARNING_MESSAGE);
            return false;
        }

        return true;
    }

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int row = tblPhoneBook.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn số cần sửa", "Chú ý", JOptionPane.WARNING_MESSAGE);
        } else {
            if (checkInupt()) {
                if (phoneBook.phoneNumberIsExist2(phoneSelect.getPhoneNumber(), txtPhoneNumber.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "Số điện thoại đã tồn tại", "Chú ý", JOptionPane.WARNING_MESSAGE);
                } else {
                    tblModel.setValueAt(txtName.getText(), row, 1);
                    tblModel.setValueAt(txtPhoneNumber.getText(), row, 2);
                    tblModel.setValueAt(txtEmail.getText(), row, 3);
                    phoneBook.getListPhone().get(row).setName(txtName.getText());
                    phoneBook.getListPhone().get(row).setPhoneNumber(txtPhoneNumber.getText());
                    phoneBook.getListPhone().get(row).setEmail(txtEmail.getText());
                    JOptionPane.showMessageDialog(rootPane, "Cập nhật thành công");
                }
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
//            listSelectModel.clearSelection();

        int row = tblPhoneBook.getSelectedRow();
        System.out.println(row);
        if (tblPhoneBook.getRowCount() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Danh bạ rỗng", "Chú ý", JOptionPane.WARNING_MESSAGE);
        } else {
            if (row == -1) {
                JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn số cần xoá", "Chú ý", JOptionPane.WARNING_MESSAGE);
            } else {
                int choose = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc muốn xoá \n" + txtName.getText() + " - " + txtPhoneNumber.getText() + " - " + txtEmail.getText(), "Xác nhận", JOptionPane.YES_NO_OPTION);
                if (choose == JOptionPane.YES_OPTION) {
                    tblModel.removeRow(row);
                    phoneBook.getListPhone().remove(phoneSelect);
//                    showPhoneBook(phoneBook.getListPhone());
                    JOptionPane.showMessageDialog(rootPane, "Xoá thành công!");
                }
            }
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblPhoneBookFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblPhoneBookFocusGained
        listSelectModel.addListSelectionListener(this);
    }//GEN-LAST:event_tblPhoneBookFocusGained

    private void tblPhoneBookFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblPhoneBookFocusLost
        listSelectModel.removeListSelectionListener(this);
    }//GEN-LAST:event_tblPhoneBookFocusLost

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        if (txtFind.isEnabled()) {
            txtFind.setText("");
            txtFind.setEnabled(false);
            showPhoneBook(phoneBook.getListPhone());
        } else {
            txtFind.setEnabled(true);
            txtFind.setText("");
            txtFind.requestFocus();
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtFindKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFindKeyReleased
        // TODO add your handling code here:
        String key = txtFind.getText();
        showPhoneBook(phoneBook.setListResult(key));
    }//GEN-LAST:event_txtFindKeyReleased

    public void showPhone(Phone phone) {
        txtName.setText(phone.getName());
        txtPhoneNumber.setText(phone.getPhoneNumber());
        txtEmail.setText(phone.getEmail());
    }

    public void updatePhone(Phone phone) {
        phone.setName(txtName.getText());
        phone.setPhoneNumber(txtPhoneNumber.getText());
        phone.setEmail(txtEmail.getText());
    }

    public void showPhoneBook(ArrayList<Phone> phoneResult) {
        tblModel.setRowCount(0);
        for (int i = 0; i < phoneResult.size(); i++) {
            String STT;
            STT = (i < 10) ? ("0" + (i + 1)) : ((i + 1) + "");
            tblModel.addRow(new Object[]{
                STT,
                phoneResult.get(i).getName(),
                phoneResult.get(i).getPhoneNumber(),
                phoneResult.get(i).getEmail()
            });
        }
    }

//    public void saveData() {
//        int row = tblModel.getRowCount();
//        System.out.println(row+ "so dong hien tai");
//        phoneBook.getListPhone().clear();
//        Phone phone = new Phone();
//        for (int i = 0; i < row; i++) {
//            phone.setName((String) tblPhoneBook.getValueAt(i, 1));
//            phone.setPhoneNumber((String) tblPhoneBook.getValueAt(i, 2));
//            phone.setEmail((String) tblPhoneBook.getValueAt(i, 3));
//            phoneBook.addPhone(phone);
//        }
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmHome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPhoneBook;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhoneNumber;
    // End of variables declaration//GEN-END:variables

    @Override
    public void valueChanged(ListSelectionEvent e) {
        System.out.println("Su kien dang chay");
        if (!(tblPhoneBook.getSelectionModel().getValueIsAdjusting())) {
            txtName.requestFocus();
            int row = tblPhoneBook.getSelectedRow();
            txtName.setText((String) tblPhoneBook.getValueAt(row, 1));
            txtPhoneNumber.setText((String) tblPhoneBook.getValueAt(row, 2));
            txtEmail.setText((String) tblPhoneBook.getValueAt(row, 3));
            phoneSelect = phoneBook.getPhoneByPhoneNumber(txtPhoneNumber.getText());
        }
    }
}
